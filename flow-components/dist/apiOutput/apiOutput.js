!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.flowcomponent=t():e.flowcomponent=t()}(this,(()=>(()=>{"use strict";var e,t={d:(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},n={};function r(e,t){switch(e){case"'":case'"':return[e,t+1];default:return[void 0,t]}}function o(e,t){if(null!=e)return e[t]}function u(e,t){let n=t;const u=e.length;let a,s="",i=!1;for(var c=0;c<u;c++){let t=e[c];if(i)a==t||"]"==t&&!a?(a&&c++,n=o(n,s),s="",i=!1):s+=t;else switch(t){case".":s&&(n=o(n,s)),s="";break;case"[":s&&(n=o(n,s)),s="",[a,c]=r(e[c+1],c),i=!0;break;default:s+=t}}return s&&(n=o(n,s)),n}t.r(n),t.d(n,{default:()=>i}),e={boolean:!0,datetime:!0,enum:!0,number:!0,dataType:!0,string:!0,constant:!0,any:!0},Object.keys(e);const a=function(e){return e.client?"client":e.server?"server":e.wfe?"wfe":"workflow"},s=function(e,t,n){switch(null==e?void 0:e.type){case"boolean":return"true"==e.value;case"input":return u(e.value,t.input);case"context":if(n.wfe)return u(e.value,n.wfe.wffContext());if(n.workflow)return u(e.value,n.workflow.context());throw new Error("can not retrieve from Context in "+a(n)+". You can only retrieve Context in workflow.");case"vars":return u(e.value,t.vars);case"output":return u(e.value,t.output);case"constant":if(n.wfe){const t=n.wfe.getConstant(e.value);if(t instanceof Promise)throw new Error("can not retrieve from Constants with async getConstant in "+a(n));return u(e.value,t)}if(n.workflow)return u(e.value,n.workflow.constantsWId);throw new Error("can not retrieve from Constants in "+a(n)+". You can only retrieve Constants in workflow.");case"number":return Number(e.value);case"string":case"enum":return e.value;case"literal":return function(e,t,n){if(""==e)return"";const r=Object.create(null),{input:o,vars:u,output:a}=t,s=function(e){const{workflow:t,client:n,server:r,wfe:o}=e;if(t)return{type:"workflow",...t.context()||{action:void 0},constants:t.constantsWId};if(n)return{type:"client"};if(r)return{type:"server"};if(o){const e=o.wfExecutionContext(),{wfEngineOnUs:t,user:n}=e.getWfeOnUs(),{processInstance:r,dataInstance:u,lastAction:a}=t;return{type:"workflowEngine",processInstance:r,dataInstance:u,action:a,currentUser:n}}throw new Error("WTF: where are you executing this flow ???")}(n),i={input:o,vars:u,output:a,context:s},c=new Function("window","global","globalThis","flow","document","XMLHttpRequest","fetch","setInterval","navigator",`return \`${e}\`;`).apply(r,[r,r,r,i,void 0,void 0,void 0,void 0,void 0]);return"null"===c?null:c}(e.value,t,n);case"notSet":return}},i=e=>{const t=e.flow.getServer();if(!t)throw new Error("apiOutput can not execute on environments without server");const{statusCode:n,headers:r,body:o}=e.props,u=Number(e.flow.evalGet(n,s));if(!u)throw new Error("apiOutput status must be a positive number");let a,i;r&&(a=Object.keys(r).reduce(((t,n)=>{const o=e.flow.evalGet(r[n],s);return void 0===o||(t[n]=o.toString()),t}),{})),o&&(i=e.flow.evalGet(o,s)),t.writeResponse({statusCode:u,body:i,headers:a}),e.flow.next()};return n})()));